##################################################################
#         Below are my personal, work-specific ignores.          #
##################################################################

# Log file creatored when installing SCT
install_sct_log.txt

# QC folder created when running SCT's 'batch_processing.sh' 
qc_example_data

# Folders in $HOME 
Desktop/
Documents/
Downloads/
fsleyes_env/
Music/
Pictures/
Public/
repos/
snap/
Templates
Videos
VirtualBox VMs/
.cache/
.conda/
# non-user-editable config dirs
.config/Beeper/
.config/cef_user_data/
.config/dconf/user
.config/enchant/
.config/evolution/
.config/fsleyes
.config/gedit/accels
.config/google-chrome/
.config/gnome-control-center/backgrounds/last-edited.xml
.config/gtk-2.0/gtkfilechooser.ini
.config/gtk-3.0/bookmarks
.config/ibus/
# There might be something user-configurable here? :hmm:
.config/JetBrains/
.config/jgit/
.config/pulse/
.config/spotify/
.config/.gsd-keyboard.settings-ported
.config/gnome-initial-setup-done
.config/user-dirs.locale
.docker/
# Auto-generated by PyCharm
.gnome/apps/jetbrains-pycharm.desktop
.gnupg/
.icons/
.java/
.local/
.mozilla/
.parsec/
.password-store/
# gnome-keyring
.pki/
.ssh/
.themes/
.zoom/
zoom*.conf

# Files in $HOME
.bash_history
.dmrc
# https://askubuntu.com/q/1366449
.wget-hsts
# https://askubuntu.com/a/300737
.Xauthority
# https://stackoverflow.com/a/17019341
.xsession-errors
# https://github.com/sudo-project/sudo/issues/56
.sudo_as_admin_successful

# Secrets
.bash_secrets

##################################################################
# Below is the contents of github.com/gitignore/Python.gitignore #
##################################################################

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
.ipython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/
